#!/usr/bin/python

import numpy as np
import itertools as it

import group

def main():
    prefs = [[0.,0.,0.], [0.,0.,1.], [1.,1.,0.], [1.,1.,1.]]
    p2max = 4
    jmax = 3
    groups = []

    # initialize groups
    for p2 in range(p2max):
        try:
            _g = group.TOh.read(p2=p2)
        except IOError:
            _g = group.TOh(pref=prefs[p2], irreps=True)
            _g.save()
        groups.append(_g)

    print(" CMF ".center(40, "="))
    print("scalar-scalar")
    for p in range(p2max):
        try:
            pw = group.PWOps(groups, 0, p, p, s1=0, s2=0)
            print(" %d x %d -> 0 ".center(40, "+") % (p, p))
            pw.print_all(jmax)
            print(" ")
        except RuntimeError:
            continue
    print("scalar-vector")
    for p in range(p2max):
        try:
            pw = group.PWOps(groups, 0, p, p, s1=0, s2=1)
            print(" %d x %d -> 0 ".center(40, "+") % (p, p))
            pw.print_all(jmax)
            print(" ")
        except RuntimeError:
            continue

    print(" MF1 ".center(40, "="))
    print("scalar-scalar")
    for p, k in it.product(range(p2max), repeat=2):
        try:
            pw = group.PWOps(groups, 1, p, k, s1=0, s2=0)
            print(" %d x %d -> 1 ".center(40, "+") % (p, k))
            pw.print_all(jmax)
            print(" ")
        except RuntimeError:
            continue
    print("scalar-vector")
    for p, k in it.product(range(p2max), repeat=2):
        try:
            pw = group.PWOps(groups, 1, p, k, s1=0, s2=1)
            print(" %d x %d -> 1 ".center(40, "+") % (p, k))
            pw.print_all(jmax)
            print(" ")
        except RuntimeError:
            continue

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
