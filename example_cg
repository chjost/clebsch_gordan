#!/usr/bin/python

import numpy as np
import itertools as it

import group

def main():
    prefs = [[0.,0.,0.], [0.,0.,1.], [1.,1.,0.], [1.,1.,1.]]
    prefs = np.asarray(prefs)
    p2max = 4
    jmax = 3
    groups = []

    # initialize groups
    for p2 in range(p2max):
        g = group.TOh(pref=prefs[p2], irreps=True)
        groups.append(g)
        print("p^2 = %d" % p2)
        print(g.irrepsname)

    # calc coefficients
    print(" CMF ".center(40, "*"))
    irnames = groups[0].irrepsname
    for p in range(p2max):
        cgs = group.TOhCG(0, p, p, groups)
        for ir in irnames:
            a, b, c = cgs.get_pion_cg(ir)
            if b is not None:
                print(ir)
                group.display(b, c)

    print(" MF1 ".center(40, "*"))
    irnames = groups[1].irrepsname
    for i, j in it.product(range(p2max), repeat=2):
        if j-i != 1:
            continue
        if i == 0 or j == 0:
            empty = 3
        else:
            empty = 4
        cgs = group.TOhCG(1, i, j, groups)
        print("%d x %d -> 1" % (i, j))
        for ir in irnames:
            a, b, c = cgs.get_pion_cg(ir)
            if b is not None:
                print(ir)
                group.display(b, c, empty=empty)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
