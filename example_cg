#!/usr/bin/python

import numpy as np
import itertools as it

import group

def main():
    prefs = [[0.,0.,0.], [0.,0.,1.], [1.,1.,0.], [1.,1.,1.]]
    #prefs = np.asarray(prefs)
    p2max = 4
    groups = []

    # initialize groups
    for p2 in range(p2max):
        g = group.TOh(pref=prefs[p2], irreps=True)
        groups.append(g)
        print("p^2 = %d" % p2)
        print(g.irrepsname)

    # calc coefficients
    print(" CMF ".center(40, "="))
    irnames = groups[0].irrepsname
    for p in range(p2max):
        print(" %d x %d -> 0 ".center(40, "+") % (p, p))
        try:
            cgs = group.TOhCG(0, p, p, groups)
            cgs.display()
            #for ir in irnames:
            #    a, b, c = cgs.get_pion_cg(ir)
            #    if b is not None:
            #        print(ir)
            #        group.display(b, c)
        except RuntimeError:
            continue

    print(" MF1 ".center(40, "="))
    irnames = groups[1].irrepsname
    for i, j in it.product(range(p2max), repeat=2):
        if i == 0 or j == 0:
            empty = 3
        else:
            empty = 4
        try:
            cgs = group.TOhCG(1, i, j, groups)
            if cgs is None:
                continue
            print(" %d x %d -> 1 ".center(40, "+") % (i, j))
            cgs.display(emptyline = empty)
            #for ir in irnames:
            #    a, b, c = cgs.get_pion_cg(ir)
            #    if b is not None:
            #        print(ir)
            #        group.display(b, c, empty=empty)
        except RuntimeError:
            continue

    print(" MF2 ".center(40, "="))
    irnames = groups[2].irrepsname
    for i, j in it.product(range(p2max), repeat=2):
        try:
            cgs = group.TOhCG(2, i, j, groups)
            if cgs is None:
                continue
            print(" %d x %d -> 2 ".center(40, "+") % (i, j))
            cgs.display(emptyline = empty)
            #for ir in irnames:
            #    a, b, c = cgs.get_pion_cg(ir)
            #    if b is not None:
            #        print(ir)
            #        group.display(b, c, empty=empty)
        except RuntimeError:
            continue

    print(" MF3 ".center(40, "="))
    irnames = groups[3].irrepsname
    for i, j in it.product(range(p2max), repeat=2):
        try:
            cgs = group.TOhCG(3, i, j, groups)
            if cgs is None:
                continue
            print(" %d x %d -> 3 ".center(40, "+") % (i, j))
            cgs.display(emptyline = empty)
            #for ir in irnames:
            #    a, b, c = cgs.get_pion_cg(ir)
            #    if b is not None:
            #        print(ir)
            #        group.display(b, c, empty=empty)
        except RuntimeError:
            continue

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
